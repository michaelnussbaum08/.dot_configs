# Setting PATH for Python 2.7
# The orginal version is saved in .bash_profile.pysave
PATH="/usr/local/Cellar/ruby/1.9.3-p125/bin:/Library/Frameworks/Python.framework/Versions/2.7/bin:${PATH}"
export PATH
PYTHONSTARTUP="/Users/michaelnussbaum08/.pythonrc"
export PYTHONSTARTUP
# my directory aliases
. ~/.sh_aliases

plugins=(git vi-mode brew pip gem)

# vim style text objects for zsh
source ~/.dot_configs/opp.zsh/opp.zsh

# use the zsh completion system
autoload -U compinit
compinit

# allow quiting with C-d
unsetopt ignore_eof


# command aliases
alias ctags='/usr/local/bin/ctags'
alias grep='grep --color=auto'
#alias ls='ls --color=auto'
alias cp='nocorrect cp'
alias mv='nocorrect mv'
alias mkdir='nocorrect mkdir'
alias ruby='/usr/local/bin/ruby'
alias grep='/usr/local/bin/grep'

# stop autocorrect aliases
alias gem='nocorrect gem'

export PATH=/usr/local/bin/:$PATH:$HOME/bin:
# Setting PATH for Python 2.7
PATH="/Library/Frameworks/Python.framework/Versions/2.7/bin:${PATH}"
export PATH
#racket
export PATH="${PATH}:/Applications/Racket_v5.1/bin"

#android SDK
export PATH="${PATH}:/Users/michaelnussbaum08/Documents/android-sdk-mac_86/tools"

EDITOR="/usr/local/bin/vim"
bindkey -v
# use vim style backspace instead of vi style
bindkey "^W" backward-kill-word    # vi-backward-kill-word
bindkey "^H" backward-delete-char  # vi-backward-delete-char
bindkey "^U" backward-kill-line    # vi-kill-line
bindkey "^?" backward-delete-char  # vi-backward-delete-char

# Size of the directory stack (pushd et al)
DIRSTACKSIZE=12

# Size of history list
HISTSIZE=50000
SAVEHIST=50000

setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_expire_dups_first
setopt hist_find_no_dups
setopt extended_history
setopt inc_append_history
setopt hist_no_store
setopt append_history
setopt  bang_hist               ### enable '!' history expansion
setopt no_hist_reduce_blanks    ### remove unneeded blanks from commands in history
setopt no_hist_verify           ### bullet-proof history-expansion
setopt     no_hist_beep                     ### beep? beep yourself!eleven!!


### completion options {{{

setopt all_export
setopt no_beep

setopt        always_last_prompt            ### if zsh prints out a list (eg. on an ambiguous completion), it reuses
                                            ###   the old prompt instead of printing a new one underneath the list;
                                            ###   this breaks menucompletion if turned off
setopt     no_always_to_end                 ### if a completion is performed with the cursor within a word, and a full
                                            ###   completion is inserted, the cursor is moved to the end of the word;
                                            ###   that is, the cursor is moved to the end of the word if either a
                                            ###   single match is inserted or menu completion is performed;
                                            ###   worthless if 'complete_in_word' is off
setopt        auto_list                     ### autom. list choices on ambiguous completion
setopt        auto_menu                     ### use menucompletion after the 2nd consecutive completion request;
                                            ###   overwritten by 'menu_complete'
setopt     no_auto_name_dirs                ### any parameter that is set to the absolute name of a directory
                                            ###   immediately becomes a name for that directory; otherwise the
                                            ###   parameter must be used is the ~parameter form.
setopt     no_auto_param_keys               ### intelligently remove automatically inserted characters when completing
setopt        auto_param_slash              ### when completing a directory name add a slash instead of a space
setopt        auto_remove_slash             ### intelligently remove the trailing slash from a completed directory
setopt        complete_aliases              ### don't expand aliases _before_ completion has finished
setopt        complete_in_word              ### if unset the cursor is set to the end of the word if completion is started
setopt        list_ambiguous                ### complete as much of a completion until it gets ambiguous.
setopt     no_list_beep                     ### how about --- NO!
setopt        list_types                    ### identify filetype by a trailing marker in completion lists
setopt     no_menu_complete                 ### always use menu completion
setopt     no_glob_complete                 ### enable globbing in completions;
                                            ###   cycle through globbing matches in a menu (do not insert them right away).
setopt        hash_list_all                 ### force entire path of a completion to be hashed
setopt     no_rec_exact                     ### in completion, recognize exact matches even if they are ambiguous.

### chdir options {{{
setopt     no_autocd                        ### if a directoryname is entered like a command, and there is no command
                                            ###   of that name; the 'cd' command is executed for that directory
setopt        auto_pushd                    ### make cd push the old directory to the dirstack
setopt     no_cdable_vars                   ### if cd would fail, because the arg is not a dir, try to expand the
                                            ###   argument as if it was called the ~expression way
setopt        chase_links                   ### _just_don't_lie_to_me_
#setopt       physical                      ### alias for chase_links
setopt        pushd_ignore_dups             ### don't push dups on the dirstack
setopt        pushd_minus                   ### Exchanges the meanings of `+' and `-' when used with a number to
                                            ###   specify a directory in the stack.
setopt     no_pushd_silent                  ### do not print the dirstack after popd/pushd
setopt     no_pushd_to_home                 ### make 'pushd' with no argument, act like 'pushd ${HOME}'

### job control options {{{

setopt     no_auto_resume                   ### if you've got a simple command suspened, say 'mutt',
                                            ###   and you forgot that you have already got a mutt running and try
                                            ###   to start another mutt, the old running mutt is resumed, rather
                                            ###   than starting a new process
setopt     no_bg_nice                       ### run background jobs at lower priority
setopt     no_hup                           ### send SIGHUP to background processes on exit.
setopt        long_list_jobs                ### list jobs in the long format by default
setopt        monitor                       ### allow job control; _absolutely_yes_
setopt        notify                        ### report status of background jobs immediately
    setopt    check_jobs                    ### report status of bg-jobs if exiting a shell with job control enabled
    setopt no_auto_continue                 ### if set, stopped jobs are disowned and restarted immediately;
                                            ###   i don't see, why you would want this.

setopt        correct                       ### try to correct the spelling of commands
